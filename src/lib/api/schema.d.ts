/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/customers/{customerId}/invoices/{invoiceId}": {
    put: operations["putInvoice"];
  };
  "/customers/{customerId}/invoices": {
    post: operations["newInvoice"];
  };
  "/revenues": {
    get: operations["all"];
  };
  "/overview": {
    get: operations["overview"];
  };
  "/customers": {
    get: operations["customersByQuery"];
  };
  "/customers/summary": {
    get: operations["allCustomersSummary"];
  };
  "/customers/invoices": {
    get: operations["filteredInvoices"];
  };
  "/customers/invoices/{invoiceId}": {
    get: operations["oneInvoice"];
    delete: operations["deleteInvoice"];
  };
  "/customers/invoices/latest": {
    get: operations["latestInvoices"];
  };
  "/customer-image/{imageId}": {
    get: operations["oneCustomerImage"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    InvoiceRequest: {
      /** Format: int32 */
      amount?: number;
      /** @enum {string} */
      status?: "pending" | "paid";
    };
    Customer: {
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      /** Format: uuid */
      id: string;
      name?: string;
      email: string;
      invoices: components["schemas"]["Invoice"][];
      image?: components["schemas"]["CustomerImage"];
    };
    CustomerImage: {
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      /** Format: uuid */
      id: string;
      contentType: string;
      blob?: string[];
      customer: components["schemas"]["Customer"];
    };
    Invoice: {
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      /** Format: uuid */
      id: string;
      /** Format: int32 */
      amount: number;
      /** @enum {string} */
      status: "pending" | "paid";
      customer: components["schemas"]["Customer"];
    };
    Revenue: {
      monthName: string;
      /** Format: int32 */
      revenue: number;
    };
    InvoiceSummaryResponse: {
      /** Format: uuid */
      id: string;
      /** Format: int32 */
      amount: number;
      name?: string;
      email: string;
      /** Format: uuid */
      imageId?: string;
    };
    OverviewResponse: {
      /** Format: int64 */
      invoiceCount: number;
      /** Format: int64 */
      customerCount: number;
      /** Format: int32 */
      totalPaidInvoices: number;
      /** Format: int32 */
      totalPendingInvoices: number;
      revenues: components["schemas"]["Revenue"][];
      latestInvoices: components["schemas"]["InvoiceSummaryResponse"][];
    };
    CustomerFilteredResponse: {
      name?: string;
      /** Format: uuid */
      id: string;
      email: string;
      /** Format: uuid */
      imageId?: string;
      /** Format: int32 */
      invoicesCount: number;
      /** Format: int64 */
      pendingTotal: number;
      /** Format: int64 */
      paidTotal: number;
    };
    CustomerSummaryResponse: {
      name?: string;
      /** Format: uuid */
      id: string;
    };
    InvoiceFilteredPageable: {
      name?: string;
      /** Format: uuid */
      id: string;
      /** @enum {string} */
      status: "pending" | "paid";
      email: string;
      /** Format: date-time */
      createdAt: string;
      /** Format: int32 */
      amount: number;
      /** Format: uuid */
      imageId?: string;
    };
    InvoiceFilteredResponse: {
      invoices: components["schemas"]["InvoiceFilteredPageable"][];
      /** Format: int32 */
      totalPages: number;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  putInvoice: {
    parameters: {
      path: {
        customerId: string;
        invoiceId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["InvoiceRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["Invoice"];
        };
      };
    };
  };
  newInvoice: {
    parameters: {
      path: {
        customerId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["InvoiceRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["Invoice"];
        };
      };
    };
  };
  all: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["Revenue"][];
        };
      };
    };
  };
  overview: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["OverviewResponse"];
        };
      };
    };
  };
  customersByQuery: {
    parameters: {
      query?: {
        q?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["CustomerFilteredResponse"][];
        };
      };
    };
  };
  allCustomersSummary: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["CustomerSummaryResponse"][];
        };
      };
    };
  };
  filteredInvoices: {
    parameters: {
      query?: {
        q?: string;
        page?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["InvoiceFilteredResponse"];
        };
      };
    };
  };
  oneInvoice: {
    parameters: {
      path: {
        invoiceId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["Invoice"];
        };
      };
    };
  };
  deleteInvoice: {
    parameters: {
      path: {
        invoiceId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  latestInvoices: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["InvoiceSummaryResponse"][];
        };
      };
    };
  };
  oneCustomerImage: {
    parameters: {
      path: {
        imageId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
}
